@{
    Queue<int> greyDays = new Queue<int>();
    Queue<int> regularDays = new Queue<int>();
    Queue<int> futureGreyDays = new Queue<int>();
    int count = 42;
}
@model Kommunikationsverktyg_för_informatik.ViewModels.MonthViewModels

@Html.HiddenFor(model => model.CurrentMonth, new { id = "currentMonth" })
@Html.HiddenFor(model => model.CurrentYear, new { id = "currentYear" })

<span id="monthTitle">@Model.Name @Model.CurrentYear</span>
<div class="elements day">
    <div class="element__day">M</div>
    <div class="element__day">T</div>
    <div class="element__day">O</div>
    <div class="element__day">T</div>
    <div class="element__day">F</div>
    <div class="element__day">L</div>
    <div class="element__day">S</div>
</div>
@for(int i = Model.PreviousMonthsNumberOfDays - (Model.FirstDayOfMonth - 1); i < Model.PreviousMonthsNumberOfDays; i++ )
{
    int j = i + 1;
    greyDays.Enqueue(j);
}
@for(int i = 1; i <= Model.NumberOfDays; i++)
{
    regularDays.Enqueue(i);
}
@for(int i = 1; i < Model.NumberOfDays + Model.FirstDayOfMonth; i++)
{
    futureGreyDays.Enqueue(i);
}
@for (int i = 0; i < 6; i++)
{
    <div class="elements">
        @do
        {
            if (greyDays.Count != 0)
            {
                string year = "";
                string month = "";
                string day = "";
                if(Model.CurrentMonth == 1)
                {
                    year = year + (Model.CurrentYear - 1);
                    month = month + "12";
                }
                else
                {
                    year = year + Model.CurrentYear;
                    month = month + (Model.CurrentMonth - 1);
                }
                day = day + greyDays.Peek();
                <div class="element__item grey" data-year="@year" data-month="@month" data-day="@day">
                    <div class="date">@greyDays.Dequeue()</div>
                </div>
            }
            else if (regularDays.Count != 0)
            {
                string year ="" + Model.CurrentYear;
                string month = "" + Model.CurrentMonth;
                string day = "" + regularDays.Peek();
                <div class="element__item regular" data-year="@year" data-month="@month" data-day="@day">
                    <div class="date">@regularDays.Dequeue()</div>
                </div>
            }
            else
            {
                string year = "";
                string month = "";
                string day = "";
                if(Model.CurrentMonth == 12)
                {
                    year = year + 1;
                    month = month + 1;
                }
                else
                {
                    year = year + Model.CurrentYear;
                    month = month + (Model.CurrentMonth + 1);
                }
                day = day + futureGreyDays.Peek();
                <div class="element__item grey" data-year="@year" data-month="@month" data-day="@day">
                    <div class="date">@futureGreyDays.Dequeue()</div>
                </div>
            }
            count--;
        } while (count % 7 != 0);
    </div>
}