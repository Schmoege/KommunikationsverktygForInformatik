@model Kommunikationsverktyg_för_informatik.ViewModels.EditViewModels
@using Microsoft.AspNet.Identity
@using DataAccess.Repositories

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>



    @using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <br />
            @if (Model.applicationUser != null)
            {
                <h4>Användare: @Model.applicationUser.FirstName.ToString() @Model.applicationUser.LastName.ToString()</h4>
            }
            
            <hr />
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.setPassword.NewPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.setPassword.NewPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.setPassword.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.setPassword.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (Model.applicationUser != null)
            {
                if (!Model.applicationUser.Id.Equals(User.Identity.GetUserId()))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Admin, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Admin, new { @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.Admin, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                }
            }
            
            @{UserRepository ur = new UserRepository();
                if (ur.GetRolesAssignedByRoleName("educationAdministrator") == 0 || ur.IsUserInRole(Model.applicationUser.Id,"educationAdministrator"))
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.EducationAdmin, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(m => m.EducationAdmin, new { @class = "form-control" })
                        </div>
                    </div>
                }
                if (ur.GetRolesAssignedByRoleName("researchAdministrator") == 0 || ur.IsUserInRole(Model.applicationUser.Id, "researchAdministrator"))
                { <div class="form-group">
                @Html.LabelFor(m => m.ResarchAdmin, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(m => m.ResarchAdmin, new { @class = "form-control" })
                </div>
            </div>
                }
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
                }

    <div>
        @Html.ActionLink("Back to adminpanel", "Adminpanel")
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
</html>
